import pandas as pd
import pytest
from pandas.testing import assert_frame_equal

from tennis_predictor.config.data import ELO_COLUMNS
from tennis_predictor.data.pipelines.compute_elo import (
    append_elo_row,
    filter_db,
    initialize_elo,
    make_elo_df,
)


@pytest.fixture
def df_matches():
    df = pd.DataFrame(
        [
            [
                "1877-540",
                "Wimbledon",
                "Grass",
                "32",
                "G",
                "18770709",
                "1",
                "113987",
                "",
                "",
                "Spencer William Gore",
                "",
                "",
                "GBR",
                "27.33196441",
                "114009",
                "",
                "",
                "Ht Gilson",
                "",
                "",
                "GBR",
                "",
                "6-2 6-0 6-3",
                "5",
                "R32",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
            ],
            [
                "1877-540",
                "Wimbledon",
                "Grass",
                "32",
                "G",
                "18770709",
                "2",
                "114146",
                "",
                "",
                "Montague Hankey",
                "",
                "",
                "GBR",
                "36.89527721",
                "113977",
                "",
                "",
                "Robert Dalby Dalby",
                "",
                "",
                "GBR",
                "",
                "6-4 6-2 3-6 6-2",
                "5",
                "R32",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
            ],
            [
                "1877-540",
                "Dummy",
                "Clay",
                "32",
                "G",
                "18770709",
                "3",
                "114147",
                "",
                "",
                "John Baker",
                "",
                "",
                "GBR",
                "",
                "114148",
                "",
                "",
                "Jw Trist",
                "",
                "",
                "GBR",
                "",
                "6-1 6-4 6-0",
                "5",
                "R32",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
            ],
            [
                "1877-540",
                "Dummy",
                "Hard",
                "32",
                "G",
                "18770709",
                "4",
                "114149",
                "",
                "",
                "Francis Nathaniel Langham",
                "",
                "",
                "GBR",
                "36.08213552",
                "114150",
                "",
                "",
                "Charles Francis Buller",
                "",
                "",
                "GBR",
                "31.1211499",
                "W/O",
                "5",
                "R32",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
            ],
            [
                "1877-540",
                "Dummy",
                "Carpet",
                "32",
                "G",
                "18770709",
                "5",
                "113953",
                "",
                "",
                "Lestocq Robert Erskine",
                "",
                "",
                "GBR",
                "19.8384668",
                "114151",
                "",
                "",
                "E Wheeler",
                "",
                "",
                "GBR",
                "",
                "6-2 6-5 6-2",
                "5",
                "R32",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
                None,
            ],
            [
                "tourney_id",
                "tourney_name",
                "surface",
                "draw_size",
                "tourney_level",
                "tourney_date",
                "match_num",
                "winner_id",
                "winner_seed",
                "winner_entry",
                "winner_name",
                "winner_hand",
                "winner_ht",
                "winner_ioc",
                "winner_age",
                "loser_id",
                "loser_seed",
                "loser_entry",
                "loser_name",
                "loser_hand",
                "loser_ht",
                "loser_ioc",
                "loser_age",
                "score",
                "best_of",
                "round",
                "minutes",
                "w_ace",
                "w_df",
                "w_svpt",
                "w_1stIn",
                "w_1stWon",
                "w_2ndWon",
                "w_SvGms",
                "w_bpSaved",
                "w_bpFaced",
                "l_ace",
                "l_df",
                "l_svpt",
                "l_1stIn",
                "l_1stWon",
                "l_2ndWon",
                "l_SvGms",
                "l_bpSaved",
                "l_bpFaced",
                "winner_rank",
                "winner_rank_points",
                "loser_rank",
                "loser_rank_points",
            ],
        ],
        columns=[
            "tourney_id",
            "tourney_name",
            "surface",
            "draw_size",
            "tourney_level",
            "tourney_date",
            "match_num",
            "winner_id",
            "winner_seed",
            "winner_entry",
            "winner_name",
            "winner_hand",
            "winner_ht",
            "winner_ioc",
            "winner_age",
            "loser_id",
            "loser_seed",
            "loser_entry",
            "loser_name",
            "loser_hand",
            "loser_ht",
            "loser_ioc",
            "loser_age",
            "score",
            "best_of",
            "round",
            "minutes",
            "w_ace",
            "w_df",
            "w_svpt",
            "w_1stIn",
            "w_1stWon",
            "w_2ndWon",
            "w_SvGms",
            "w_bpSaved",
            "w_bpFaced",
            "l_ace",
            "l_df",
            "l_svpt",
            "l_1stIn",
            "l_1stWon",
            "l_2ndWon",
            "l_SvGms",
            "l_bpSaved",
            "l_bpFaced",
            "winner_rank",
            "winner_rank_points",
            "loser_rank",
            "loser_rank_points",
        ],
    )
    return df


@pytest.fixture
def df_initial_elo_grass():
    df = pd.DataFrame(
        [
            [113987, 18770701, None, None, 1500.0, 0],
            [114146, 18770701, None, None, 1500.0, 0],
            [114009, 18770701, None, None, 1500.0, 0],
            [113977, 18770701, None, None, 1500.0, 0],
        ],
        columns=ELO_COLUMNS,
    )
    return df


def test_filter_db(df_matches):
    assert_frame_equal(filter_db(df_matches, "All"), df_matches.iloc[:5, :])
    assert_frame_equal(filter_db(df_matches, "Grass"), df_matches.iloc[:2, :])
    assert_frame_equal(
        filter_db(df_matches, "Clay").reset_index(drop=True),
        df_matches.iloc[2:3, :].reset_index(drop=True),
    )
    assert_frame_equal(
        filter_db(df_matches, "Hard").reset_index(drop=True),
        df_matches.iloc[3:4, :].reset_index(drop=True),
    )
    assert_frame_equal(
        filter_db(df_matches, "Carpet").reset_index(drop=True),
        df_matches.iloc[4:5, :].reset_index(drop=True),
    )


def test_make_elo_df():
    df_result = make_elo_df(
        {
            113987: pd.DataFrame(
                [[113987, 18770701, None, None, 1500.0, 0]], columns=ELO_COLUMNS
            ),
            114146: pd.DataFrame(
                [[114146, 18770701, None, None, 1500.0, 0]], columns=ELO_COLUMNS
            ),
        }
    )
    df_expected = pd.DataFrame(
        [
            [113987, 18770701, None, None, 1500.0, 0],
            [114146, 18770701, None, None, 1500.0, 0],
        ],
        columns=ELO_COLUMNS,
    )
    assert_frame_equal(df_result, df_expected)


def test_initialize_elo(df_matches, df_initial_elo_grass):
    df_grass = filter_db(df_matches, "Grass")
    df_initial_elo_grass1 = make_elo_df(initialize_elo(df_grass))
    assert_frame_equal(
        df_initial_elo_grass1.sort_values("player_id").reset_index(drop=True),
        df_initial_elo_grass.sort_values("player_id").reset_index(drop=True),
    )


def test_append_elo_row(df_matches):
    df_clay = filter_db(df_matches, "Clay")
    dfs_elo = initialize_elo(df_clay)
    row = df_clay.iloc[0, :]
    append_elo_row(row, dfs_elo)
    df_result = make_elo_df(dfs_elo)
    df_expected = pd.DataFrame(
        [
            [114147, 18770701, None, None, 1500.0, 0],
            [114147, 18770709, "1877-540", 3, 1516.0, 1],
            [114148, 18770701, None, None, 1500.0, 0],
            [114148, 18770709, "1877-540", 3, 1484.0, 1],
        ],
        columns=ELO_COLUMNS,
    )
    assert_frame_equal(
        df_result.sort_values("player_id").reset_index(drop=True),
        df_expected,
        check_dtype=False,
    )
